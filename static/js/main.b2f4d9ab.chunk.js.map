{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","selectTodo","className","map","todo","id","completed","classNames","title","type","onClick","TodoFilter","visibleTodosSelect","visibleTodosInput","useState","query","setQuery","onChange","event","value","target","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","users","setUsers","useEffect","usersFromServer","currentUser","find","user","userId","href","name","App","setTodos","currentTodos","setCurrentTodos","selectedTodo","setSelectedTodo","todosFromServer","selectOption","filteredTodos","filter","lowerQuery","toLowerCase","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b2f4d9ab.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[] | null;\n  selectTodo: (todo: Todo | null) => void;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectTodo,\n}) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos?.map(todo => (\n          <tr\n            data-cy=\"todo\"\n            className=\"\"\n            key={todo.id}\n          >\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered \">\n              {todo.completed && (\n                <span className=\"icon\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n\n            <td className=\"is-vcentered is-expanded\">\n              <p className={classNames(\n                { 'has-text-danger': !todo.completed },\n                { 'has-text-success': todo.completed },\n              )}\n              >\n                {todo.title}\n              </p>\n            </td>\n\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => {\n                  selectTodo(todo);\n                }}\n              >\n                <span className=\"icon\">\n                  <i className=\"far fa-eye\" />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import React, { useState } from 'react';\n\ntype Props = {\n  visibleTodosSelect:(selectOption:string) => void,\n  visibleTodosInput:(query:string) => void,\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  visibleTodosSelect,\n  visibleTodosInput,\n}) => {\n  const [query, setQuery] = useState('');\n\n  const handleChangeSelect = (event: { target: { value: string; }; }) => {\n    const { value } = event.target;\n\n    visibleTodosSelect(value);\n  };\n\n  const handleChangeInput = (event: { target: { value: string; }; }) => {\n    const { value } = event.target;\n\n    setQuery(value);\n    visibleTodosInput(value);\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={handleChangeSelect}\n          >\n            <option value=\"all\">\n              All\n            </option>\n\n            <option value=\"active\">\n              Active\n            </option>\n\n            <option value=\"completed\">\n              Completed\n            </option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={handleChangeInput}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query !== '' && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => {\n                setQuery('');\n                visibleTodosInput('');\n              }}\n            />\n          </span>\n        )}\n\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(1000)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\nexport const getUsers = () => get<User[]>('/users');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { getUsers } from '../../api';\n\ntype Props = {\n  todo: Todo,\n  selectTodo: (todo: Todo | null) => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({ todo, selectTodo }) => {\n  const [users, setUsers] = useState<User[] | null>(null);\n\n  useEffect(() => {\n    getUsers()\n      .then(usersFromServer => {\n        setUsers([...usersFromServer]);\n      });\n  }, []);\n\n  const currentUser = users?.find(user => user.id === todo.userId);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!users ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => {\n                selectTodo(null);\n              }}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {/* <strong className=\"has-text-success\">Done</strong> */}\n              <strong className=\"has-text-danger\">Planned</strong>\n\n              {' by '}\n\n              <a href=\"mailto:Sincere@april.biz\">\n                {currentUser?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos, getUser } from './api';\nimport { Todo } from './types/Todo';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[] | null>(null);\n  const [currentTodos, setCurrentTodos] = useState<Todo[] | null>(null);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n\n  useEffect(() => {\n    getTodos()\n      .then(todosFromServer => todosFromServer\n        .map(todo => ({\n          ...todo,\n          user: getUser(todo.userId),\n        })))\n      .then(todosFromServer => {\n        setTodos([...todosFromServer]);\n        setCurrentTodos([...todosFromServer]);\n      });\n  }, []);\n\n  const selectTodo = (todo: Todo | null) => {\n    if (selectedTodo?.id !== todo?.id) {\n      setSelectedTodo(todo);\n    }\n  };\n\n  const visibleTodosInput = (query:string) => {\n    const lowerQuery = query.toLowerCase();\n\n    const filteredTodos = todos?.filter(todo => (\n      todo.title.toLowerCase().includes(lowerQuery)\n    ));\n\n    if (filteredTodos) {\n      setCurrentTodos(filteredTodos);\n    }\n  };\n\n  const visibleTodosSelect = (selectOption:string) => {\n    let filteredTodos;\n\n    switch (selectOption) {\n      case 'active':\n        filteredTodos = todos?.filter(todo => todo.completed === false);\n\n        if (filteredTodos) {\n          setCurrentTodos(filteredTodos);\n        }\n\n        break;\n\n      case 'completed':\n        filteredTodos = todos?.filter(todo => todo.completed === true);\n\n        if (filteredTodos) {\n          setCurrentTodos(filteredTodos);\n        }\n\n        break;\n\n      case 'all':\n        setCurrentTodos(todos);\n\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter visibleTodosSelect={visibleTodosSelect} visibleTodosInput={visibleTodosInput} />\n            </div>\n\n            <div className=\"block\">\n              {todos ? (\n                <TodoList todos={currentTodos} selectTodo={selectTodo} />\n              ) : (\n                <Loader />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal todo={selectedTodo} selectTodo={selectTodo} />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}